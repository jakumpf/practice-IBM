<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="316bd55c-e29b-4201-ae01-24b3791eb800" activeEnvironment="Default" name="REST Project 1" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="55af4075-74ca-4068-803d-54e3571eb944" wadlVersion="http://wadl.dev.java.net/2009/02" name="CurrencyAPI" type="rest" basePath="/currencyapi/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>CurrencyAPI</con:description><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://2V9M3X2:8089/</con:endpoint><con:endpoint>http://2v9m3x2.siipolska.pl:7800</con:endpoint></con:endpoints><con:resource name="/getCurrency" path="/getCurrency" id="91510320-88cc-41c1-bcf8-5ef03642332f"><con:settings/><con:parameters/><con:method name="getCurrency" id="c6631c08-6c56-4871-9294-ea1b4a06b02b" method="GET"><con:description>Retrieve getCurrency&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>currency</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="522a36d6-3b33-4ff8-840a-b6609bd9d104" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://2V9M3X2:8089/</con:endpoint><con:request/><con:originalUri>http://2v9m3x2.siipolska.pl/currencyapi/v1/getCurrency</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6c21ba3e-a4ea-4b10-ad37-73b235f3d244" wadlVersion="http://wadl.dev.java.net/2009/02" name="CurrencyAPI" type="rest" basePath="/currencyapi/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>CurrencyAPI</con:description><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://2V9M3X2:8089/</con:endpoint><con:endpoint>http://2v9m3x2.siipolska.pl:7800</con:endpoint></con:endpoints><con:resource name="/getCurrency" path="/getCurrency" id="7e20d6ae-ca4f-43d2-8b3b-ba39f8b68204"><con:settings/><con:parameters/><con:method name="getCurrency" id="86f75816-e841-478e-83ba-8618b3375cca" method="GET"><con:description>Retrieve getCurrency&#13;
</con:description><con:settings/><con:parameters><con:parameter><con:name>currency</con:name><con:style>QUERY</con:style><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:request name="Request 1" id="b96870e4-49c2-4835-9837-54f68ae19a37" mediaType="application/json"><con:settings/><con:endpoint>http://2v9m3x2.siipolska.pl:7800</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="/getCurrencies" path="/getCurrencies" id="58e02666-e248-4bb8-919c-95e3a37c8556"><con:settings/><con:parameters/><con:method name="postGetCurrencies" id="6d4fb16b-b058-41ac-b0e8-e8b998ef3adf" method="POST"><con:description>Insert a getCurrencies&#13;
</con:description><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="7afd44fe-441c-46a9-9e54-51c98121cf0c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089/</con:endpoint><con:request>{}</con:request><con:originalUri>http://localhost/currencyapi/v1/getCurrencies</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="258a3cd9-3766-4579-8807-852f090cbd66" port="8089" path="/" host="2V9M3X2" name="getCurrencyMock"><con:settings/><con:properties/><con:restMockAction name="/currencyapi/v1/getCurrency" method="GET" resourcePath="/currencyapi/v1/getCurrency" id="efb62c73-5d76-4be5-9dc8-ba1a23422041"><con:settings/><con:defaultResponse xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="2ebe977a-48b4-4e7f-a9b6-6afc2a89356c" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "currency": "EUR",
    "amount": 4.5
}</con:responseContent><con:header><con:name>Content-Type</con:name><con:value>application/json</con:value></con:header></con:response></con:restMockAction><con:restMockAction name="/currencyapi/v1/getCurrencies" method="POST" resourcePath="/currencyapi/v1/getCurrencies" id="df002ebf-031b-4d2e-9465-15fc9b58e050"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="Response 1" id="cb720393-6a1a-4144-850d-7d51e6e192e1" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>[
    {
        "currency": "EUR",
        "amount": 4.5,
        "countries": [
            "Germany",
            "France",
            "Italy"
        ]
    },
    {
        "currency": "USD",
        "amount": 4,
        "countries": [
            "United States of America",
            "Republic of Zimbabwe",
            "Panama"
        ]
    },
    {
        "currency": "GBP",
        "amount": 5.2,
        "countries": [
            "United Kingdom",
            "Gibraltar",
            "Zimbabwe"
        ]
    }
]</con:responseContent><con:header><con:name>Content-Type</con:name><con:value>application/json</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>